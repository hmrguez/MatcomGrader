using Exam;
using Grader;

namespace AutoGrader;

[TestFixture]
public class Tests
{
    
    [Test]
    [TestCaseSource(nameof(GetTestCases))]
    public void AutoGeneratedSolutions(int input, int expectedOutput)
    {
        // Act
        var solved = Solution.Solve(input);

        // Assert
        Assert.That(expectedOutput, Is.EqualTo(solved));
    }

    
    /// <summary>
    ///     This method runs once after all tests in this fixture have executed.
    ///     It's used for any necessary cleanup.
    /// </summary>
    [OneTimeTearDown]
    public void OneTimeTearDown()
    {
        // Your teardown code here
        // For example, releasing shared resources or logging
        TestContext.WriteLine("All tests in RegularTests have completed.");
    }
    
    /// <summary>
    ///     Provides test cases for the AutoGeneratedSolutions test method.
    /// </summary>
    /// <returns>An enumerable of object arrays, each containing input and expected output.</returns>
    public static IEnumerable<TestCaseData> GetTestCases()
    {
        // Define seed and number of test cases
        var seed = 42;
        var numberOfCases = 10;

        foreach (var testCase in Generator.GenerateTestCases(seed, numberOfCases))
            yield return new TestCaseData(testCase[0], testCase[1])
                .SetName($"Input_{testCase[0]}_Expected_{testCase[1]}");
    }
}